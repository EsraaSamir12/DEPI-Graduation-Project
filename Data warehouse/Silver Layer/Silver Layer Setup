
-- Applicant
IF OBJECT_ID('Silver.Applicant', 'U') IS NOT NULL DROP TABLE Silver.Applicant;
CREATE TABLE Silver.Applicant (
    ApplicantID INT,
    FullName NVARCHAR(MAX),
    Nationality NVARCHAR(MAX),
    CurrentLevel NVARCHAR(MAX),
    YearOfStudy INT,
    FinancialSupportNeeded NVARCHAR(4),
    FamilyIncome DECIMAL(18,2),
    InstitutionName NVARCHAR(MAX),
    Major NVARCHAR(MAX),
    Email NVARCHAR(MAX),
    Gender NVARCHAR(6),
    GPA DECIMAL(3,2),
    Country NVARCHAR(MAX),
    City NVARCHAR(MAX),
	age INT 
);

-- University
IF OBJECT_ID('Silver.University', 'U') IS NOT NULL DROP TABLE Silver.University;
CREATE TABLE Silver.University (
    Uni_ID INT,
    University NVARCHAR(MAX),
    [Location] NVARCHAR(MAX),
    Rating DECIMAL(3,2),
);

-- FinanceDetails
IF OBJECT_ID('Silver.FinanceDetails', 'U') IS NOT NULL DROP TABLE Silver.FinanceDetails;
CREATE TABLE Silver.FinanceDetails (
    FinanceID INT,
    MinScholarshipCoverageTuition DECIMAL(10,2),
    MaxScholarshipCoverageTuition DECIMAL(10,2),
    ScholarshipCoverageAccommodation NVARCHAR(MAX),
    ScholarshipCoverageLivingExpense NVARCHAR(MAX),
    MinTuitionApplicantNeedToPay DECIMAL(10,2),
    MaxTuitionApplicantNeedToPay DECIMAL(10,2),
    MinApplicantNeedToPayAccommodation DECIMAL(10,2),
    MaxApplicantNeedToPayAccommodation DECIMAL(10,2),
    ApplicantNeedToPayAccommodationCategoryType NVARCHAR(MAX),
    MinApplicantNeedToPayLivingExpense DECIMAL(10,2),
    MaxApplicantNeedToPayLivingExpense DECIMAL(10,2),
    LivingExpenseApplicantNeedToPayCategoryType NVARCHAR(MAX),
    Tuition DECIMAL(10,2),
    TuitionCategoryType NVARCHAR(MAX),
    DeadlineForPayment DATE,
    MinApplicationServiceFeeByDollars DECIMAL(10,2),
    MaxApplicationServiceFeeByDollars DECIMAL(10,2)
);

-- Scholarship
IF OBJECT_ID('Silver.Scholarship', 'U') IS NOT NULL DROP TABLE Silver.Scholarship;
CREATE TABLE Silver.Scholarship (
    Schol_ID INT,
    Uni_ID INT,
    FinanceID INT,
    Program NVARCHAR(MAX),
    TeachingLanguage NVARCHAR(MAX),
    Degree NVARCHAR(MAX),
    Duration INT,
    DurationCategoryType NVARCHAR(MAX),
    StartingDate DATE,
    DeadlineForDocuments DATE,
    StartYear INT,
    StartMonth INT,
    Category NVARCHAR(MAX)
	);

-- Recommender
IF OBJECT_ID('Silver.Recommender', 'U') IS NOT NULL DROP TABLE Silver.Recommender;
CREATE TABLE Silver.Recommender (
    RecommenderID INT,
    FullName NVARCHAR(MAX),
    Email NVARCHAR(MAX),
    Position NVARCHAR(MAX),
    Institution NVARCHAR(MAX)
);

-- RecommendationLetter
IF OBJECT_ID('Silver.RecommendationLetter', 'U') IS NOT NULL DROP TABLE Silver.RecommendationLetter;
CREATE TABLE Silver.RecommendationLetter (
    RecommenderID INT,
    ApplicantID INT,
    LetterText NVARCHAR(MAX),
    CanLearnQuickly INT,
    ProblemSolvingAbility INT,
    ResearchSkills INT,
    AcademicPerformance INT
);

-- ExamType
IF OBJECT_ID('Silver.ExamType', 'U') IS NOT NULL DROP TABLE Silver.ExamType;
CREATE TABLE Silver.ExamType (
    ExamTypeID INT,
    ExamName NVARCHAR(255),
    Provider NVARCHAR(255)
);

-- ExamResult
IF OBJECT_ID('Silver.ExamResult', 'U') IS NOT NULL DROP TABLE Silver.ExamResult;
CREATE TABLE Silver.ExamResult (
    ExamTypeID INT,
    ApplicantID INT,
	ApplicationID INT NOT NULL,
    ExamDate DATE,
    Score DECIMAL(5,2),
    Result NVARCHAR(MAX),
    IsValid NVARCHAR(MAX)
);

-- Support
IF OBJECT_ID('Silver.Support', 'U') IS NOT NULL DROP TABLE Silver.Support;
CREATE TABLE Silver.Support (
    SupportID INT,
    SupportType NVARCHAR(100),
    MaxAmount DECIMAL(18,2),
    Duration NVARCHAR(MAX),
    Recurring NVARCHAR(MAX)
);

-- ApplicantFinancialSupport
IF OBJECT_ID('Silver.ApplicantFinancialSupport', 'U') IS NOT NULL DROP TABLE Silver.ApplicantFinancialSupport;
CREATE TABLE Silver.ApplicantFinancialSupport (
    ApplicantID INT,
    SupportID INT,
    RequestedSupportAmount DECIMAL(18,2),
    SupportReason NVARCHAR(MAX),
    ApprovalStatus NVARCHAR(MAX)
);

-- Committee
IF OBJECT_ID('Silver.Committee', 'U') IS NOT NULL DROP TABLE Silver.Committee;
CREATE TABLE Silver.Committee (
    CommitteeID INT,
    CommitteeName NVARCHAR(200)
);

-- CommitteMember
IF OBJECT_ID('Silver.CommitteMember', 'U') IS NOT NULL DROP TABLE Silver.CommitteMember;
CREATE TABLE Silver.CommitteMember (
    ReviewerID INT,
    Name NVARCHAR(MAX),
    Email NVARCHAR(MAX),
    Status NVARCHAR(MAX),
    CurrentWorkedLoad INT,
    Institution NVARCHAR(MAX),
    Position NVARCHAR(MAX),
    Specialization NVARCHAR(MAX),
    Department NVARCHAR(MAX),
    MaxReviewsCapacity INT,
    YearsOfExperience INT,
    CommitteeID INT,
);

-- Interviewer
IF OBJECT_ID('Silver.Interviewer', 'U') IS NOT NULL DROP TABLE Silver.Interviewer;
CREATE TABLE Silver.Interviewer (
    InterviewerID INT,
    Name NVARCHAR(MAX),
    Position NVARCHAR(MAX),
    Institution NVARCHAR(MAX),
    Email NVARCHAR(MAX)
);

-- Interview
IF OBJECT_ID('Silver.Interview', 'U') IS NOT NULL DROP TABLE Silver.Interview;
CREATE TABLE Silver.Interview (
    InterviewerID INT,
    ApplicantID INT,
	ApplicationID INT NOT NULL,
    InterviewDate DATE,
    Location NVARCHAR(MAX),
    Result NVARCHAR(MAX)
);

-- Application
IF OBJECT_ID('Silver.Application', 'U') IS NOT NULL DROP TABLE Silver.Application;
CREATE TABLE Silver.Application (
    ApplicationID INT,
    ApplicantID INT,
    ScholID INT,
    ApplicationDate DATE,
    CommitteeID INT,
    Score DECIMAL(5,2),
    Comment NVARCHAR(MAX),
    Recommendation NVARCHAR(MAX)
);

-- ApplicationPayment
IF OBJECT_ID('Silver.ApplicationPayment', 'U') IS NOT NULL DROP TABLE Silver.ApplicationPayment;
CREATE TABLE Silver.ApplicationPayment (
    PaymentID INT,
    ApplicationID INT,
    PaymentDate DATE,
    TuitionPay DECIMAL(18,2),
    AccommodationPay DECIMAL(18,2),
    LivingExpensePay DECIMAL(18,2),
    ServiceFee DECIMAL(18,2),
    PaymentMethod NVARCHAR(50)
);
